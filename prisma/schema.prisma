generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model formactivosfijos {
  actID  String   @id @db.VarChar(255)
  actContent Json
  report report[]
}

model formcaratula {
  carID  String   @id @db.VarChar(255)
  carContent Json
  report report[]
}

model formdetallerenglones {
  detID  String   @id @db.VarChar(255)
  detContent Json
  report report[]
}

model formesfpatrimonio {
  esfID  String   @id @db.VarChar(255)
  esfContent Json
  report report[]
}

model formimpuestodiferido {
  impID  String   @id @db.VarChar(255)
  impContent Json
  report report[]
}

model formingresosfancturacion {
  ingID  String   @id @db.VarChar(255)
  ingContent Json
  report report[]
}

model formr110 {
  r110ID  String   @id @db.VarChar(255)
  r110Content Json
  report report[]
}

model formrentaliquida {
  renID  String   @id @db.VarChar(255)
  renContent Json
  report report[]
}

model formresumenesferi {
  resID  String   @id @db.VarChar(255)
  resContent Json
  report report[]
}

model report {
  repID  String   @id @db.VarChar(255)

  stuID  String   @db.VarChar(255)
  roomID String   @db.VarChar(255)
  carID  String   @db.VarChar(255)
  detID  String   @db.VarChar(255)
  esfID  String   @db.VarChar(255)
  renID  String   @db.VarChar(255)
  impID  String   @db.VarChar(255)
  ingID  String   @db.VarChar(255)
  actID  String   @db.VarChar(255)
  resID  String   @db.VarChar(255)
  r110ID String   @db.VarChar(255)

  formactivosfijos         formactivosfijos         @relation(fields: [actID], references: [actID], map: "fk_report_actID")
  formcaratula             formcaratula             @relation(fields: [carID], references: [carID], map: "fk_report_carID")
  formdetallerenglones     formdetallerenglones     @relation(fields: [detID], references: [detID], map: "fk_report_detID")
  formesfpatrimonio        formesfpatrimonio        @relation(fields: [esfID], references: [esfID], map: "fk_report_esfID")
  formimpuestodiferido     formimpuestodiferido     @relation(fields: [impID], references: [impID], map: "fk_report_impID")
  formingresosfancturacion formingresosfancturacion @relation(fields: [ingID], references: [ingID], map: "fk_report_ingID")
  formr110                 formr110                 @relation(fields: [r110ID], references: [r110ID], map: "fk_report_r110ID")
  formrentaliquida         formrentaliquida         @relation(fields: [renID], references: [renID], map: "fk_report_renID")
  formresumenesferi        formresumenesferi        @relation(fields: [resID], references: [resID], map: "fk_report_resID")
  room                     room                     @relation(fields: [roomID], references: [roomID], map: "fk_report_roomID")
  student                  student                  @relation(fields: [stuID], references: [stuID], map: "fk_report_stuID")

  @@index([actID], map: "idx_report_actID")
  @@index([carID], map: "idx_report_carID")
  @@index([detID], map: "idx_report_detID")
  @@index([esfID], map: "idx_report_esfID")
  @@index([impID], map: "idx_report_impID")
  @@index([ingID], map: "idx_report_ingID")
  @@index([r110ID], map: "idx_report_r110ID")
  @@index([renID], map: "idx_report_renID")
  @@index([resID], map: "idx_report_resID")
  @@index([roomID], map: "idx_report_roomID")
  @@index([stuID], map: "idx_report_stuID")
}

model room {
  roomID       String          @id @db.VarChar(255)
  roomName     String          @db.VarChar(255)
  roomPassword String          @unique @db.VarChar(255)
  roomDate     DateTime        @db.Date
  roomStatus   room_roomStatus
  roomAnswer   Json
  usuID        String          @db.VarChar(255)

  report       report[]
  user         user            @relation(fields: [usuID], references: [usuID], map: "fk_room_usuID")
  student      student[]

  @@index([usuID], map: "idx_room_usuID")
}

model student {
  stuID     String   @id @db.VarChar(255)
  stuCedula String   @db.VarChar(255)
  roomID    String

  report    report[]
  room      room     @relation(fields: [roomID], references: [roomID], map: "fk_student_roomID")

  @@index([roomID], map: "idx_student_roomID")
}

model user {
  usuID       String   @id @default(cuid())
  usuName     String       @db.VarChar(128)
  usuEmail    String       @unique @db.VarChar(128)
  usuPassword String       @db.VarChar(255)
  usuRole     user_usuRole

  room        room[]
}

enum user_usuRole {
  admin
  profesor
}

enum room_roomStatus {
  open
  closed
}
