
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.FormactivosfijosScalarFieldEnum = {
  actID: 'actID',
  actContent: 'actContent'
};

exports.Prisma.FormcaratulaScalarFieldEnum = {
  carID: 'carID',
  carContent: 'carContent'
};

exports.Prisma.FormdetallerenglonesScalarFieldEnum = {
  detID: 'detID',
  detContent: 'detContent'
};

exports.Prisma.FormesfpatrimonioScalarFieldEnum = {
  esfID: 'esfID',
  esfContent: 'esfContent'
};

exports.Prisma.FormimpuestodiferidoScalarFieldEnum = {
  impID: 'impID',
  impContent: 'impContent'
};

exports.Prisma.FormingresosfancturacionScalarFieldEnum = {
  ingID: 'ingID',
  ingContent: 'ingContent'
};

exports.Prisma.Formr110ScalarFieldEnum = {
  r110ID: 'r110ID',
  r110Content: 'r110Content'
};

exports.Prisma.FormrentaliquidaScalarFieldEnum = {
  renID: 'renID',
  renContent: 'renContent'
};

exports.Prisma.FormresumenesferiScalarFieldEnum = {
  resID: 'resID',
  resContent: 'resContent'
};

exports.Prisma.ReportScalarFieldEnum = {
  repID: 'repID',
  stuID: 'stuID',
  roomID: 'roomID',
  carID: 'carID',
  detID: 'detID',
  esfID: 'esfID',
  renID: 'renID',
  impID: 'impID',
  ingID: 'ingID',
  actID: 'actID',
  resID: 'resID',
  r110ID: 'r110ID'
};

exports.Prisma.RoomScalarFieldEnum = {
  roomID: 'roomID',
  roomName: 'roomName',
  roomPassword: 'roomPassword',
  roomDate: 'roomDate',
  roomStatus: 'roomStatus',
  roomAnswer: 'roomAnswer',
  usuID: 'usuID'
};

exports.Prisma.StudentScalarFieldEnum = {
  stuID: 'stuID',
  stuCedula: 'stuCedula',
  roomID: 'roomID'
};

exports.Prisma.UserScalarFieldEnum = {
  usuID: 'usuID',
  usuName: 'usuName',
  usuEmail: 'usuEmail',
  usuPassword: 'usuPassword',
  usuRole: 'usuRole'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.formactivosfijosOrderByRelevanceFieldEnum = {
  actID: 'actID'
};

exports.Prisma.formcaratulaOrderByRelevanceFieldEnum = {
  carID: 'carID'
};

exports.Prisma.formdetallerenglonesOrderByRelevanceFieldEnum = {
  detID: 'detID'
};

exports.Prisma.formesfpatrimonioOrderByRelevanceFieldEnum = {
  esfID: 'esfID'
};

exports.Prisma.formimpuestodiferidoOrderByRelevanceFieldEnum = {
  impID: 'impID'
};

exports.Prisma.formingresosfancturacionOrderByRelevanceFieldEnum = {
  ingID: 'ingID'
};

exports.Prisma.formr110OrderByRelevanceFieldEnum = {
  r110ID: 'r110ID'
};

exports.Prisma.formrentaliquidaOrderByRelevanceFieldEnum = {
  renID: 'renID'
};

exports.Prisma.formresumenesferiOrderByRelevanceFieldEnum = {
  resID: 'resID'
};

exports.Prisma.reportOrderByRelevanceFieldEnum = {
  repID: 'repID',
  stuID: 'stuID',
  roomID: 'roomID',
  carID: 'carID',
  detID: 'detID',
  esfID: 'esfID',
  renID: 'renID',
  impID: 'impID',
  ingID: 'ingID',
  actID: 'actID',
  resID: 'resID',
  r110ID: 'r110ID'
};

exports.Prisma.roomOrderByRelevanceFieldEnum = {
  roomID: 'roomID',
  roomName: 'roomName',
  roomPassword: 'roomPassword',
  usuID: 'usuID'
};

exports.Prisma.studentOrderByRelevanceFieldEnum = {
  stuID: 'stuID',
  stuCedula: 'stuCedula',
  roomID: 'roomID'
};

exports.Prisma.userOrderByRelevanceFieldEnum = {
  usuID: 'usuID',
  usuName: 'usuName',
  usuEmail: 'usuEmail',
  usuPassword: 'usuPassword'
};
exports.room_roomStatus = exports.$Enums.room_roomStatus = {
  open: 'open',
  closed: 'closed'
};

exports.user_usuRole = exports.$Enums.user_usuRole = {
  admin: 'admin',
  professor: 'professor'
};

exports.Prisma.ModelName = {
  formactivosfijos: 'formactivosfijos',
  formcaratula: 'formcaratula',
  formdetallerenglones: 'formdetallerenglones',
  formesfpatrimonio: 'formesfpatrimonio',
  formimpuestodiferido: 'formimpuestodiferido',
  formingresosfancturacion: 'formingresosfancturacion',
  formr110: 'formr110',
  formrentaliquida: 'formrentaliquida',
  formresumenesferi: 'formresumenesferi',
  report: 'report',
  room: 'room',
  student: 'student',
  user: 'user'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
